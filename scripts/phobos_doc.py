#!/usr/bin/python
# -*- coding: utf-8 -*-
# Author: Aziz KÃ¶ksal
import os, re
from sys import argv
from shutil import copy
from path import Path
from common import getModuleFQN

D_VERSION = "1.0" # TODO: Needs to be determined dynamically.
PHOBOS_SRC = Path(argv[1])
DATA = Path("data") # dil's data/ directory.
FILES = [] # List of D source files to be processed.
IGNORE_LIST = ["phobos.d", "cast.d", "invariant.d", "switch.d", "unittest.d"]
# Get a list of source files in the source directory of Phobos.
for root, dirs, files in PHOBOS_SRC.walk():
  for file in files:
    if Path(file).ext.lower() in ('.d','.di') and file not in IGNORE_LIST:
      FILES.append(Path(root, file))
  if root == PHOBOS_SRC and 'internal' in dirs:
      dirs.remove('internal')  # Don't visit "PHOBOS_SRC/internal".
FILES.sort()

# Modify std.ddoc and write it out to data/phobos.ddoc.
ddoc = open(PHOBOS_SRC/"std.ddoc").read() # Read the whole file.
# Add a website icon.
ddoc = re.sub(r"</head>", '<link rel="icon" type="image/gif" href="./holy.gif">\r\n</head>', ddoc)
# Make "../" to "./".
ddoc = re.sub(r"\.\./(style.css|dmlogo.gif)", r"./\1", ddoc)
# Make some relative paths to absolute ones.
ddoc = ddoc.replace("../", "http://www.digitalmars.com/d/%s/" % D_VERSION)
# Replace with a DDoc macro.
ddoc = re.sub("Page generated by.+", "$(GENERATED_BY)", ddoc)
# Replace phobos.html#xyz.
# ddoc = re.sub("href=\"phobos.html#(std_[^\"]+)\"", "href=\"\\1.html\"", ddoc)
# Make e.g. "std_string.html" to "std.string.html".
ddoc = re.sub('href="std_.+?"', lambda m: m.group(0).replace("_", "."), ddoc)
# Linkify the title.
ddoc = re.sub("<h1>\$\(TITLE\)</h1>", '<h1><a href="$(SRCFILE)">$(TITLE)</a></h1>', ddoc)
# Add a link to the index in the navigation sidebar.
ddoc = re.sub('(NAVIGATION_PHOBOS=\r\n<div class="navblock">)', '\\1\r\n$(UL\r\n$(LI<a href="index.html" title="Index of all HTML files">Index</a>)\r\n)', ddoc)
# Write new ddoc file.
open(DATA/"phobos.ddoc", "w").write(ddoc)

# Destination of all documentation files.
DEST = Path("phobosdoc")
HTML_SRC = DEST/"htmlsrc"
# Create the destination folders.
HTML_SRC.exists or os.makedirs(HTML_SRC)

# Create an index file.
LIST = ""
for filepath in FILES:
  fqn = getModuleFQN(PHOBOS_SRC, filepath)
  LIST += '  <li><a href="%(fqn)s.html">%(fqn)s.html</a></li>\n' % {'fqn':fqn}
open(DATA/"index.d", 'w').write("Ddoc\n<ul>\n%s\n</ul>\nMacros:\nTITLE = Index" % LIST)

# Compy some files needed from dmd's doc folder.
PHOBOS_HTML = PHOBOS_SRC/".."/".."/"html"/"d"/"phobos"
dotdot = Path("..")
for file in ("erfc.gif", "erf.gif", dotdot/"style.css", dotdot/"holy.gif", dotdot/"dmlogo.gif"):
  copy(PHOBOS_HTML/file, DEST)
# Syntax highlighted files need html.css.
copy(DATA/"html.css", HTML_SRC)

# Generate documenation files.
FILES_STR = ' '.join(FILES + [PHOBOS_SRC/"phobos.d", DATA/"index.d", DATA/"phobos.ddoc", DATA/"phobos_overrides.ddoc"])
os.system("dil ddoc %(DEST)s -i -v -version=DDoc %(FILES)s" % {'DEST':DEST,'FILES':FILES_STR})

# Modify DEST/phobos.html.
ddoc = open(DEST/"phobos.html").read() # Read the whole file.
# Make relative links to absolute links.
ddoc = ddoc.replace("../", "http://www.digitalmars.com/d/%s/" % D_VERSION)
# Make e.g. "std_string.html" to "std.string.html".
ddoc = re.sub("href=\"std_[^\"]+\"", lambda m: m.group(0).replace("_", "."), ddoc)
# De-linkify the title.
ddoc = re.sub("<h1><a[^>]+>(.+?)</a></h1>", "<h1>\\1</h1>", ddoc)
# Write the contents back to the file.
open(DEST/"phobos.html", "w").write(ddoc)

# Generate syntax highlighted files.
for filepath in FILES:
  htmlfile = getModuleFQN(PHOBOS_SRC, filepath) + ".html"
  print "dil hl %s > %s" % (filepath, HTML_SRC/htmlfile);
  os.system('dil hl --lines --syntax --html %s > "%s"' % (filepath, HTML_SRC/htmlfile))
