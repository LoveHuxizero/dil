=Purpose=
dil is a hand-crafted compiler implementation for the D programming language. Currently the Lexer and the Parser are fully implemented (except for very minor things.) No semantic analysis is done at the moment. The backend will most probably be gcc.

Features you will or might see in dil:
  * Output localized error messages (dil is already internationalized.)
  * Documentation generation ala doxygen (keeping ddoc in mind.)
  * Generate syntax-highlighted D source files (token-highlighting is already possible.)
  * Refactoring (renaming symbols, modules; changing the type of a symbol etc.)
  * Coding rules enforcement.
  * Code search.
  * Code statistics.
  * Code analysis (lint-like).
  * Code formatting.
  * Translate D code to other languages.
  * Port D 1.0 code to D 2.0.

dil can parse D 2.0 additions:
  * [http://www.digitalmars.com/d/statement.html#ForeachRangeStatement ForeachRangeStatement].
  * Cast expressions: cast(const) and cast(invariant).
  * Type constructors: const(Type) and invariant(Type).
  * Traits expressions: `__`traits(Identifier) and `__`traits(Identifier, !TemplateArguments).
  * const/invariant/final/scope/static as storage classes in parameter lists (e.g. void func(final scope Foo f);).
  * invariant as storage class for declarations (e.g. invariant Foo f;).

*Meaning:*
The word dil comes from the Turkish language and means among other things a) tongue or b) language. It is a very fitting name for this project because of its meaning and because it starts with the letter d and for the reason that the project owner has Turkish origins.

==Download==
There are no binaries to download yet. If you want to get the sources you can either check it out via SVN (`svn co http://dil.googlecode.com/svn/trunk/ dil`) or you can use the fetch command of [http://dsource.org/projects/dsss DSSS] (dsss net fetch dil).